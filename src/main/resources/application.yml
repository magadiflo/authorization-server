server:
  port: 9000

logging:
  level:
    org.springframework.security: trace
    org.springframework.security.oauth2: trace

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/db_spring_boot_oauth2
    username: root
    password: magadiflo

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: true
    defer-datasource-initialization: true
    generate-ddl: false
    hibernate:
      ddl-auto: update

  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
            client-name: authorization-server-spring-boot-as-a-client
        provider:
          google:
            user-name-attribute: email
